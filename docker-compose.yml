version: '3.9'

services:
  # Fast Api web
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    container_name: fastapi_app
    volumes:
      - ./web:/usr/src/app
    env_file:
      - .env
    environment:
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
    ports:
      - "8000:8000"
    depends_on:
      - mongo_db
      - redis
    networks:
      - app_network

  # Telegram
  aiogram_bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: aiogram_app
    volumes:
      - ./bot:/usr/src/app
    env_file:
      - .env
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - MONGODB_URL=${MONGODB_URL}
      - REDIS_URL=${REDIS_URL}
    ports:
      - "80:80"
    depends_on:
      - mongo_db
      - redis
    networks:
      - app_network

  # Nginx server
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 8082:80
    restart: always
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf/:ro #ro read only
    depends_on:
      - web
    networks:
      - app_network


  # database
  mongo_db:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  # Cache
  redis:
    image: 'redis:alpine'
    hostname: redis
    command: redis-server
    ports:
      - '6379:6379'
    env_file:
      - .env
    environment:
      - REDIS_CACHE_KEY=${REDIS_CACHE_KEY}
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  mongo_data:
  letsencrypt:
